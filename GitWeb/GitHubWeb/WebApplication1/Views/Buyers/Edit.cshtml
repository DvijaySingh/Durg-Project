
@model Web.Models.ViewModel.BuyerViewModel

@{
    ViewBag.Title = "Update Buyer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    img.zoom {
        width: 500px;
        height: 400px;
        border: 1px solid;
        border-color: white;
        -webkit-transition: all .2s ease-in-out;
        -moz-transition: all .2s ease-in-out;
        -o-transition: all .2s ease-in-out;
        -ms-transition: all .2s ease-in-out;
    }

    .transition {
        -webkit-transform: scale(1.8);
        -moz-transform: scale(1.8);
        -o-transform: scale(1.8);
        transform: scale(4.8);
    }

    #dvPreview {
        filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=image);
        max-height: 160px;
        max-width: 285px;
        min-height: 160px;
        min-width: 285px;
        display: block;
        border: 1px;
    }

        #dvPreview img {
            max-height: 200px;
            max-width: 285px;
        }
</style>
<script src="~/Scripts/Pages/Buyer.js"></script>
<center> <label> Buyer </label></center>

<div class="tab">
    <button class="tablinks" id="defaultOpen" onclick="openCity(event, 'custnfo')">Customer Info</button>
    <button class="tablinks" onclick="openCity(event, 'productInfo')">Product Info</button>
    <button class="tablinks" onclick="openCity(event, 'insInfo')">Installment</button>
</div>
<div id="custnfo" class="tabcontent">
    @using (Html.BeginForm("Edit", "Buyers", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="customer-information">
            <div class=" row">
                <div class="col-md-8">
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <label> Customer Name </label>
                            @Html.HiddenFor(model => model.buyer.BuyerID, new { @id = "buyerID" })
                            @Html.TextBoxFor(model => model.buyer.BuyerName, new { @class = "form-control", @id = "txtbuyerName" })
                            @Html.ValidationMessageFor(model => model.buyer.BuyerName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2 form-group"> 
                            <label>  Code </label>
                            @Html.TextBoxFor(model => model.buyer.CustomerCode, new { @class = "form-control", @id = "txtcustCode" })
                            @Html.ValidationMessageFor(model => model.buyer.CustomerCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            <label> Address </label>
                            @Html.TextAreaFor(model => model.buyer.Address, new { @class = "form-control", @id = "txtbuyerAdd" })
                            @Html.ValidationMessageFor(model => model.buyer.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label> Amount </label>
                            @Html.TextBoxFor(model => model.buyer.DepositeAmount, new { @class = "form-control", @type = "number" })
                            @Html.ValidationMessageFor(model => model.buyer.DepositeAmount, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            <label> Rate</label>
                            @Html.TextBoxFor(model => model.buyer.OutstandingAmount, new { @class = "form-control", @type = "number" })
                            @Html.ValidationMessageFor(model => model.buyer.OutstandingAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label>  Buy Date</label>
                            @Html.TextBoxFor(model => model.buyer.BuyDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtbuyDate" })
                            @Html.ValidationMessageFor(model => model.buyer.BuyDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            <label>  Interest Rate</label>
                            @Html.TextBoxFor(model => model.buyer.InterestRate, new { @class = "form-control", @type = "number", @id = "txtInterestRate" })
                            @Html.ValidationMessageFor(model => model.buyer.InterestRate, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class=" row">
                        <div class="col-md-6 form-group">
                            <label>  Interest</label>
                            @Html.TextBoxFor(model => model.buyer.Interest, new { @class = "form-control", @type = "number", @id = "txtinterst" })
                            @Html.ValidationMessageFor(model => model.buyer.Interest, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            <label>  Final Date</label>
                            @Html.TextBoxFor(model => model.buyer.finalDate, "{0:dd/MM/yyyy}", new { @class = "form-control"  , @id = "txtFinalDate" })
                            @Html.ValidationMessageFor(model => model.buyer.finalDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-4">
                    <div class="col-md-12 form-group">

                        <div>
                            @Html.HiddenFor(m => m.buyer.Bill)
                            <input id="fileupload" type="file" name="file" />
                            <div id="dvPreview">

                                @{

                                    if (Model.buyer.Bill != null)
                                    {
                                        var base64 = Convert.ToBase64String(Model.buyer.Bill);
                                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                        <img class="zoom" src="@imgSrc" alt="">
                                    }
                                }
                            </div>

                        </div>
                        @*<img src="@imgSrc" />*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-9"></div>
                <div class="col-md-3"><input type="submit" value="Update Buyer" class="btn btn-default  " /></div>
            </div>

           

        </div>


                            }
</div>

<div id="productInfo" class="tabcontent">
    <div id="divcusProducts" class="customer-information">
        @using (Ajax.BeginForm("AddBuyerProduct", "Buyers",
                                                                                                                                      new AjaxOptions
                                                                                                                                      {
                                                                                                                                          HttpMethod = "Post",
                                                                                                                                          UpdateTargetId = "lstCusProducts",
                                                                                                                                          OnSuccess = "RefreshProductDataTable"
                                                                                                                                      }))
        {
            <div id="ajaxform">
                <div class="row">
                    <div class="col-md-3 form-group">
                        <label> ProductName </label>
                        @Html.HiddenFor(m => m.productInfo.BuyerID, new { @id = "hdnProductBuyerId" })
                        @Html.HiddenFor(m => m.productInfo.BuyerProductlD, new { @id = "hdnProductId" })
                        @Html.TextBoxFor(model => model.productInfo.ProductName, new { @class = "form-control", @id = "txtProductname" })
                        @Html.ValidationMessageFor(model => model.productInfo.ProductName, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-3 form-group">
                        <label> Type </label>

                        @Html.DropDownListFor(model => model.productInfo.Type, ViewBag.ProductTypeID as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "ddlType" })
                        @Html.ValidationMessageFor(model => model.productInfo.Type, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-3 form-group">
                        <label> Weight(gm) </label>
                        @Html.TextBoxFor(model => model.productInfo.Weight, new { @class = "form-control", @type = "number", @id = "txtprodWeight" })
                        @Html.ValidationMessageFor(model => model.productInfo.Weight, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-3 form-group">
                        <label>Units</label>
                        @Html.TextBoxFor(model => model.productInfo.Units, new { @class = "form-control", @type = "number", @id = "txtunit" })
                        @Html.ValidationMessageFor(model => model.productInfo.Units, "", new { @class = "text-danger" })

                    </div>

                </div>
                <div class="row">
                    <div class="col-md-3 form-group">
                        
                    </div>
                    <div class="col-md-6 form-group">
                    </div>
                    <div class="col-md-3 form-group">
                        <input type="submit" class="btn btn-default frm-button" id="btnAjaxSubmit" value="Submit" />
                    </div>
                </div>
            </div>

        }

        <div id="lstCusProducts">
            @Html.Partial("~/Views/Buyers/_BuyerProducts.cshtml", Model)
        </div>

    </div>
</div>

<div id="insInfo" class="tabcontent">
    <div id="divcusProducts" class="customer-information">
        @using (Ajax.BeginForm("AddBuyerInstallment", "Buyers",
                                                                                                                                              new AjaxOptions
                                                                                                                                              {
                                                                                                                                                  HttpMethod = "Post",
                                                                                                                                                  UpdateTargetId = "lstinstallment",
                                                                                                                                                  OnSuccess = "RefreshInstallmentDatatable"
                                                                                                                                              }))
        {
            <div id="ajaxform">
                <div class="row">
                    <div class="col-md-3 form-group">
                        <label> Amount </label>
                        @Html.HiddenFor(m => m.Installments.BuyerInstallmentID, new { @id = "hdnInstallment" })
                        @Html.HiddenFor(m => m.Installments.BuyerID, new { @id = "hdnInstallmentBuyerID" })
                        @Html.TextBoxFor(model => model.Installments.Amount, new { @class = "form-control", @type = "number", @id = "txtinsAmount" })
                        @Html.ValidationMessageFor(model => model.Installments.Amount, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-3 form-group">
                        <label> Date </label>
                        @Html.TextBoxFor(model => model.Installments.Date, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtinsdate" })
                        @Html.ValidationMessageFor(model => model.Installments.Date, "", new { @class = "text-danger" })


                    </div>
                    <div class="col-md-3 form-group">

                    </div>
                    <div class="col-md-3 form-group">
                        <input type="submit" class="btn btn-default frm-button" id="btninstallmentSubmit" value="Submit" />
                    </div>
                </div>

            </div>

        }

        <div id="lstinstallment">
            @Html.Partial("~/Views/Buyers/_BuyerInstallments.cshtml", Model)
        </div>

    </div>
</div>

<div>

  @Html.ActionLink("Back to List", "Index", "Buyers", null, new { @class = "btn btn-default" })
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
